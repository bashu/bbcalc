#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import string
import sys

# Directory name, defaults to name of binary, it is relative to ..
# a, __init__.py and main.py is expected to be found there.
DIRNAME = None

# Application name, defaults to capitalized name of binary
APPNAME = None

# Do not modify code below this point
dirname = DIRNAME or os.path.split(sys.argv[0])[1]
appname = APPNAME or dirname.capitalize()

# Figure out the directory which is the prefix
# path-of-current-file/..
currentdir = os.path.dirname(os.path.abspath(sys.argv[0]))
basedir = os.path.abspath(os.path.join(currentdir, '..'))

# Add the base directory where the application is installed in to sys.path
if os.path.exists(os.path.join(basedir, 'lib')):
    if sys.version_info < (2, 6):
        site = 'site-packages'
    else:
        site = 'dist-packages'

    if sys.platform == 'win32':
        pythondir = os.path.join(basedir, 'Lib', site)
    else:
        pythondir = os.path.join(basedir, 'lib',
                                 'python%d.%d' % sys.version_info[:2], site)
    if not os.path.exists(pythondir):
        raise SystemExit("ERROR: Could not find required directory: %s" %
                         pythondir)
elif not os.path.exists(os.path.join(basedir, dirname)):
    raise SystemExit("ERROR: Could not find required directory: %s" %
                     os.path.join(basedir, dirname))
else:
    pythondir = basedir

sys.path.insert(0, pythondir)

try:
    import pkg_resources
except ImportError:
    pass

from bbcalc import main

try:
    sys.exit(main.main((sys.argv)))
except KeyboardInterrupt:
    raise SystemExit
